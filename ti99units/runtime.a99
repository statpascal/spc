; Wait for key press

waitkey:
        clr r14
	clr r13
!
        li r12, >0024
        ldcr r13, 3
        li r12, >0006
        stcr r14, 8
        ci r14, >ff00
        jne !
        ai r13, >0100
        ci r13, >0600
        jne -!
        jmp waitkey
!
	b *r11

; Copy string
;
; R12: source address
; R13: dest address
; R14: max dest size + 1

_rt_copy_str:
	dec r14
	movb *r12+, r15
	srl r15, 8
	c r14, r15
	jl !
	mov r15, r14		; use length of shorter src
!
	movb @>831d, *r13+	; r14 low
	jeq !

; Copy block of memory
;
; R12: source address
; R13: dest address
; R14: count != 0

_rt_copy_mem:
	movb *r12+, *r13+
	dec r14
	jne _rt_copy_mem
!
	b *r11

; move expects 3 words on the stack: src, dest, length

move:
	mov *r10+, r12
	mov *r10+, r13
	mov *r10+, r14
	jeq -!			; return if zero bytes
	jmp _rt_copy_mem
